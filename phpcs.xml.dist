<?xml version="1.0"?>
<ruleset name="Standard">

    <!-- Use UTF-8 -->
    <arg name="encoding" value="utf-8"/>
    <arg name="extensions" value="php" />

    <!-- Adiciona os standards symfony2 -->
    <config name="installed_paths" value="vendor/escapestudios/symfony2-coding-standard" />

    <!-- Arquivos e pastas que devem ser considerados -->
    <file>.</file>

    <!-- Exceções -->
    <exclude-pattern>bootstrap/cache/*</exclude-pattern>
    <exclude-pattern>docker/*</exclude-pattern>
    <exclude-pattern>docs/*</exclude-pattern>
    <exclude-pattern>docsrc/*</exclude-pattern>
    <exclude-pattern>html-coverage/*</exclude-pattern>
    <exclude-pattern>node_modules/*</exclude-pattern>
    <exclude-pattern>public/*</exclude-pattern>
    <exclude-pattern>resources/*</exclude-pattern>
    <exclude-pattern>storage/*</exclude-pattern>
    <exclude-pattern>stubs/*</exclude-pattern>
    <exclude-pattern>tests/*</exclude-pattern>
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>_ide_helper.php</exclude-pattern>
    <exclude-pattern>_ide_helper_models.php</exclude-pattern>
    <exclude-pattern>.phpstorm.meta.php</exclude-pattern>
    <exclude-pattern>server.php</exclude-pattern>

    <!-- Include the whole PSR-1 standard -->
    <rule ref="PSR1"/>

    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2"/>

    <rule ref="Symfony">
        <!-- Desabilita o alerta para a ausência de licença no inicio de uma classe -->
        <exclude name="Symfony.Commenting.License.Warning"/>
        <!-- Permite o uso de return e dentro de if...else -->
        <exclude name="Symfony.Formatting.ReturnOrThrow.Invalid"/>
        <!-- Desativado para evitar alertas/erros ao utilizar os accessors do Laravel -->
        <exclude name="Zend.NamingConventions.ValidVariableName.NotCamelCaps"/>
        <!-- Permite usar propriedades snake case (usadas em DTOs) -->
        <exclude name="Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps"/>
        <!-- Permite quebra de linha na declaração de funções, onde o número de parâmetros é muito grande -->
        <exclude name="Symfony.Functions.Arguments.Invalid"/>
        <!-- Remove obrigatoriedade nos comentários de classes. -->
        <exclude name="Symfony.Commenting.ClassComment.Missing"/>
        <!-- Permite adicionar comentários #region -->
        <exclude name="PEAR.Commenting.InlineComment.WrongStyle"/>
    </rule>

    <!-- Previne que linhas grandes demais sejam exibidas como erro no output da CLI (para evitar poluição) -->
    <rule ref="Generic.Files.LineLength.MaxExceeded">
        <type>warning</type>
    </rule>

    <!-- Previne a exibição de erros por falta de namespace nas migrations (que não o possuem) -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>database/migrations/*</exclude-pattern>
    </rule>

    <rule ref="Symfony.Files.AlphanumericFilename.Invalid">
        <exclude-pattern>config/*</exclude-pattern>
        <exclude-pattern>routes/*</exclude-pattern>
    </rule>
</ruleset>